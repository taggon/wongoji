import { expect, describe, test } from 'bun:test';
import { format } from './format';

// const testCases = [
//   '안녕하세요. 반갑습니다.',
//   '대한민국은 Korea이다.',
//   '걸음도 해깝고 방울소리가 밤 벌판에 한층 청청하게 울렸다.\n달이 어지간히 기울어졌다.',
//   '"이걸 까셀라 부다!"하고 소리를 쳤다.',
//   // '대체 이게 웬 속인지(지금까지도 난 영문을 모른다) 아버질 혼내 주기는 제가 내래 놓고 이제 와서는 달려들며, "에그머니! 이 망할 게 아버지 죽이네!" 하고 내 귀를 뒤로 잡아당기며 마냥 우는 것이 아니냐.'
// ];

// testCases.forEach((text, index) => {
//   test(`Case #${index + 1}: ${text}`, () => {
//     expect(format(text)).toMatchSnapshot();
//   });
// });

describe('간단한 문장.', () => {
  let i = 1;

  test(`Case #${i++}: 안녕하세요. 반갑습니다.`, () => {
    expect(format('안녕하세요. 반갑습니다.')).toEqual([
      [' ', '안', '녕', '하', '세', '요', '.', '반', '갑', '습', '니', '다', '.'],
    ]);
  });

  test(`Case #${i++}: 대한민국은 Korea이다.`, () => {
    expect(format('대한민국은 Korea이다.')).toEqual([
      [' ', '대', '한', '민', '국', '은', ' ', 'K', 'or', 'ea', '이', '다', '.'],
    ]);
  });

  test(`Case #${i++}: 줄바꿈 처리`, () => {
    expect(format('걸음도 해깝고 방울소리가 밤 벌판에 한층 청청하게 울렸다.\n달이 어지간히 기울어졌다.')).toEqual([
      [' ', '걸', '음', '도', ' ', '해', '깝', '고', ' ', '방', '울', '소', '리', '가', ' ', '밤', ' ', '벌', '판', '에'],
      ['한', '층', ' ', '청', '청', '하', '게', ' ', '울', '렸', '다', '.'],
      [' ', '달', '이', ' ', '어', '지', '간', '히', ' ', '기', '울', '어', '졌', '다', '.'],
    ]);
  });
});

describe('따옴표 처리 웁션', () => {
  const text = '"이걸 까셀라 부다!"하고 소리를 쳤다.';

  test('스마트 인용 부호(useSmartQuote) 옵션이 true라면 따옴표와 홑따옴표를 유니코드 문자로 변경한다.', () => {
    expect(format(text, { useSmartQuote: true })).toEqual([
      [' ', '“', '이', '걸', ' ', '까', '셀', '라', ' ', '부', '다', '!', '”', '하', '고', ' ', '소', '리', '를', ' '],
      [' ','쳤', '다', '.'],
    ]);
  });

  test('인용문 항상 줄바꿈() 옵션이 true라면 인용문을 독립된 문단에 표시한다.', () => {
    expect(format(text, { useSmartQuote: true })).toEqual([
      [' ', '“', '이', '걸', ' ', '까', '셀', '라', ' ', '부', '다', '!', '”'],
      ['하', '고', ' ', '소', '리', '를', ' ','쳤', '다', '.'],
    ]);
  });
});
